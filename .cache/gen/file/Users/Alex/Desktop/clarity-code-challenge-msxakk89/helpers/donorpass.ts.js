import { types } from 'https://deno.land/x/clarinet@v1.0.6/index.ts';
import { readOnlyCall, transactionCall } from './base.ts';
export function getLastTokenId(chain, sender) {
    return readOnlyCall(chain, sender, "donorpass", "get-last-token-id");
}
export function getOwner(chain, sender, nftId) {
    return readOnlyCall(chain, sender, "donorpass", "get-owner", [
        types.uint(nftId)
    ]);
}
export function getTokenUri(chain, sender, nftId) {
    return readOnlyCall(chain, sender, "donorpass", "get-token-uri", [
        types.uint(nftId)
    ]);
}
export function mint(sender, minter) {
    return transactionCall(sender, "donorpass", "mint", [
        types.principal(minter)
    ]);
}
export function transfer(sender, receiver, nftId) {
    return transactionCall(sender, "donorpass", "transfer", [
        types.uint(nftId),
        types.principal(sender),
        types.principal(receiver)
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvQWxleC9EZXNrdG9wL2NsYXJpdHktY29kZS1jaGFsbGVuZ2UtbXN4YWtrODkvaGVscGVycy9kb25vcnBhc3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhaW4sIFR4LCB0eXBlcyB9IGZyb20gJ2h0dHBzOi8vZGVuby5sYW5kL3gvY2xhcmluZXRAdjEuMC42L2luZGV4LnRzJztcbmltcG9ydCB7IHJlYWRPbmx5Q2FsbCwgdHJhbnNhY3Rpb25DYWxsIH0gZnJvbSAnLi9iYXNlLnRzJ1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGFzdFRva2VuSWQoY2hhaW46IENoYWluLCBzZW5kZXI6IHN0cmluZykge1xuICAgIHJldHVybiByZWFkT25seUNhbGwoY2hhaW4sIHNlbmRlciwgXCJkb25vcnBhc3NcIiwgXCJnZXQtbGFzdC10b2tlbi1pZFwiKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0T3duZXIoY2hhaW46IENoYWluLCBzZW5kZXI6IHN0cmluZywgbmZ0SWQ6IG51bWJlcikge1xuICAgIHJldHVybiByZWFkT25seUNhbGwoY2hhaW4sIHNlbmRlciwgXCJkb25vcnBhc3NcIiwgXCJnZXQtb3duZXJcIiwgW3R5cGVzLnVpbnQobmZ0SWQpXSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRva2VuVXJpKGNoYWluOiBDaGFpbiwgc2VuZGVyOiBzdHJpbmcsIG5mdElkOiBudW1iZXIpIHtcbiAgICByZXR1cm4gcmVhZE9ubHlDYWxsKGNoYWluLCBzZW5kZXIsIFwiZG9ub3JwYXNzXCIsIFwiZ2V0LXRva2VuLXVyaVwiLCBbdHlwZXMudWludChuZnRJZCldKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWludChzZW5kZXI6IHN0cmluZywgbWludGVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdHJhbnNhY3Rpb25DYWxsKHNlbmRlciwgXCJkb25vcnBhc3NcIiwgXCJtaW50XCIsIFt0eXBlcy5wcmluY2lwYWwobWludGVyKV0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlcihzZW5kZXI6IHN0cmluZywgcmVjZWl2ZXI6IHN0cmluZywgbmZ0SWQ6IG51bWJlcikge1xuICAgIHJldHVybiB0cmFuc2FjdGlvbkNhbGwoc2VuZGVyLCBcImRvbm9ycGFzc1wiLCBcInRyYW5zZmVyXCIsIFt0eXBlcy51aW50KG5mdElkKSwgdHlwZXMucHJpbmNpcGFsKHNlbmRlciksIHR5cGVzLnByaW5jaXBhbChyZWNlaXZlcildKVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQW9CLEtBQUssUUFBUSw4Q0FBOEMsQ0FBQztBQUNoRixTQUFTLFlBQVksRUFBRSxlQUFlLFFBQVEsV0FBVyxDQUFBO0FBRXpELE9BQU8sU0FBUyxjQUFjLENBQUMsS0FBWSxFQUFFLE1BQWMsRUFBRTtJQUN6RCxPQUFPLFlBQVksQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsQ0FBQyxDQUFBO0NBQ3ZFO0FBRUQsT0FBTyxTQUFTLFFBQVEsQ0FBQyxLQUFZLEVBQUUsTUFBYyxFQUFFLEtBQWEsRUFBRTtJQUNsRSxPQUFPLFlBQVksQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUU7UUFBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUFDLENBQUMsQ0FBQTtDQUNwRjtBQUVELE9BQU8sU0FBUyxXQUFXLENBQUMsS0FBWSxFQUFFLE1BQWMsRUFBRSxLQUFhLEVBQUU7SUFDckUsT0FBTyxZQUFZLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFO1FBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FBQyxDQUFDLENBQUE7Q0FDeEY7QUFFRCxPQUFPLFNBQVMsSUFBSSxDQUFDLE1BQWMsRUFBRSxNQUFjLEVBQUU7SUFDakQsT0FBTyxlQUFlLENBQUMsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUU7UUFBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztLQUFDLENBQUMsQ0FBQTtDQUNqRjtBQUVELE9BQU8sU0FBUyxRQUFRLENBQUMsTUFBYyxFQUFFLFFBQWdCLEVBQUUsS0FBYSxFQUFFO0lBQ3RFLE9BQU8sZUFBZSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFO1FBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztRQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDO0tBQUMsQ0FBQyxDQUFBO0NBQ25JIn0=